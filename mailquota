#!/usr/bin/perl -w

use strict;

use FindBin qw($Bin $Script);
use lib "$Bin/lib";

use File::Slurp;
use Data::Dumper;
use Text::Iconv;
use Getopt::Long::Descriptive;

use ADLDIF::Person;
use ADLDIF::LDAP::Object;

my ($opt, $usage) = describe_options(
	'$Script %o <some-arg>',
	[ 'ldif|l=s',	"Input LDIF file", { required => 1 } ],
	[],
	[ 'help',	"print usage message and exit", { shortcircuit => 1 } ],
);

print($usage->text), exit if $opt->help;

my @lines=map { s/[\n\r]*//g; $_; } read_file($opt->ldif); 

my @objlines;
my @persons;
foreach ( @lines ) {
	push @objlines, $_;
	if (/^$/) {
		my $lo=new ADLDIF::LDAP::Object(\@objlines);
		@objlines=();
		if ($lo->objectClass_contains("person")) {
			push @persons, new ADLDIF::Person($lo);
		}
	}
}

printf("samaccountname;dn;company;msExchArchiveQuota;msExchArchiveWarnQuota;msExchDumpsterQuota;msExchDumpsterWarningQuota;Addresses\n");
foreach my $person ( @persons ) {

	my $addr=$person->{lo}->attribute("proxyAddresses");
	my $joined=defined($addr) ? join(",", map { $_=$_->value(); s/;/-/g; $_; } @{$addr}) : "";

	printf("%s;%s;%s;%s;%s;%s;%s;%s\n",
		$person->samaccountname(),
		$person->{lo}->attribute_value_first("dn",""),
		$person->{lo}->attribute_value_first("company",""),
		$person->{lo}->attribute_value_first("msExchArchiveQuota",""),
		$person->{lo}->attribute_value_first("msExchArchiveWarnQuota", ""),
		$person->{lo}->attribute_value_first("msExchDumpsterQuota", ""),
		$person->{lo}->attribute_value_first("msExchDumpsterWarningQuota", ""),
		$joined
		);
}
