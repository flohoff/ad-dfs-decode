#!/usr/bin/perl -w
use strict;

use FindBin qw($Bin $Script);
use lib "$Bin/lib";

use File::Slurp;
use Data::Dumper;
use Text::Iconv;
use Getopt::Long::Descriptive;

use ADLDIF::LDAP::Object;
use ADLDIF::msDFS::NamespaceAnchor;
use ADLDIF::msDFS::Namespacev2;
use ADLDIF::msDFS::Linkv2;

my ($opt, $usage) = describe_options(
	'$Script %o <some-arg>',
	[ 'ldif|l=s',	"Input LDIF file", { required => 1 } ],
	[],
	[ 'help',	"print usage message and exit", { shortcircuit => 1 } ],
);

print($usage->text), exit if $opt->help;

my @lines=map { s/[\n\r]*//g; $_; } read_file($opt->ldif); 

my $namespaceindex;

my @links;
my @namespaces;
my @anchors;

my @objlines;
foreach ( @lines ) {
	push @objlines, $_;
	if (!/^$/) {
		next;
	}

	my $lo=new ADLDIF::LDAP::Object(\@objlines);
	@objlines=();

	if ($lo->objectClass_contains("msDFS-Linkv2")) {
		push @links, new ADLDIF::msDFS::Linkv2($lo);
	} elsif ($lo->objectClass_contains("msDFS-Namespacev2")) {
		my $ns=new ADLDIF::msDFS::Namespacev2($lo);
		my $id=$ns->id();
		$namespaceindex->{$id}=$ns;
	} elsif ($lo->objectClass_contains("msDFS-NamespaceAnchor")) {
		push @anchors, new ADLDIF::msDFS::NamespaceAnchor($lo);
	}
}

foreach my $namespace ( @namespaces ) {
	my $targets=$namespace->targets();

	if (!defined($targets) || ref $targets ne 'ARRAY') {
		print STDERR Dumper($namespace);
		next;
	}

	foreach my $target ( @{$targets} ) {
		printf("%s;/;%s;%s;%s;\n",
			$namespace->name(),
			$target->{priorityRank},
			$target->{priorityClass},
			$target->{content}
		);
	}
}

foreach my $link ( @links ) {
	my $namespaceid=$link->namespaceid();
	my $namespace=$namespaceindex->{$namespaceid};

	my $targets=$link->targets();

	if (!defined($targets)) {
		next;
	}

	foreach my $target ( @{$targets} ) {
		printf("%s;%s;%s;%s;%s;\n",
			$namespace->name(),
			$link->path(),
			$target->{priorityRank},
			$target->{priorityClass},
			$target->{content}
		);

	}
}

