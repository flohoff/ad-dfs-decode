#!/usr/bin/perl -w

use strict;

use FindBin qw($Bin $Script);
use lib "$Bin/lib";

use File::Slurp;
use Data::Dumper;
use Text::Iconv;
use XML::Simple qw(:strict);
use Getopt::Long::Descriptive;

use ADLDIF::LDAP::Object;
use ADLDIF::Group;

my ($opt, $usage) = describe_options(
	'$Script %o <some-arg>',
	[ 'ldif|l=s',	"Input LDIF file", { required => 1 } ],
	[],
	[ 'help',	"print usage message and exit", { shortcircuit => 1 } ],
);

print($usage->text), exit if $opt->help;

my @lines=map { s/[\n\r]*//g; $_; } read_file($opt->ldif); 

my @objlines;
my @groups;
foreach ( @lines ) {
	push @objlines, $_;
	if (/^$/) {
		my $lo=new ADLDIF::LDAP::Object(\@objlines);
		@objlines=();
		if ($lo->objectClass_contains("group")) {
			push @groups, new ADLDIF::Group($lo);
		}
	}
}

foreach my $group ( @groups ) {
	printf("DN: %s\n", $group->{lo}->attribute_value_first("dn"));
	printf("CN: %s\n", $group->{lo}->attribute_value_first("cn"));

	my $members=$group->{lo}->attribute("member");
	next if (!defined($members));

	foreach my $member ( @{$members} ) {
		printf("\t%s\n", $member->value());
	}
	printf("\n");
}

